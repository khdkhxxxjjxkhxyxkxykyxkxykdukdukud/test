--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.8) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==81) then v19=v0(v3(v30,1,1));return "";else local v86=0;local v87;while true do if (v86==0) then v87=v2(v0(v30,16));if v19 then local v128=v5(v87,v19);v19=nil;return v128;else return v87;end break;end end end end);local function v20(v31,v32,v33) if v33 then local v88=0 -0 ;local v89;while true do if (v88==(0 -0)) then v89=(v31/((3 -1)^(v32-(2 -1))))%((1067 -(68 + 997))^(((v33-((1479 -859) -(555 + 64))) -(v32-(4 -(5 -2)))) + ((1710 -778) -(857 + (424 -(87 + 263)))))) ;return v89-(v89%1) ;end end else local v90=568 -(367 + 201) ;local v91;while true do if (v90==(927 -(214 + 713))) then v91=(1 + 1)^(v32-1) ;return (((v31%(v91 + v91))>=v91) and (958 -(892 + 65))) or (0 + 0) ;end end end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35=180 -(67 + 113) ;local v36;local v37;while true do if (v35==(1 + 0)) then return (v37 * 256) + v36 ;end if (v35==(0 -0)) then v36,v37=v1(v16,v18,v18 + 2 + (0 -0) );v18=v18 + (7 -5) ;v35=953 -((1454 -652) + 150) ;end end end local function v23() local v38=0;local v39;local v40;local v41;local v42;while true do if (v38==(0 + 0)) then v39,v40,v41,v42=v1(v16,v18,v18 + (1000 -(915 + 82)) );v18=v18 + (11 -7) ;v38=1 + 0 ;end if (v38==(1 -0)) then return (v42 * ((2916888 + 13861515) -((1898 -829) + 118))) + (v41 * (148681 -83145)) + (v40 * (559 -303)) + v39 ;end end end local function v24() local v43=v23();local v44=v23();local v45=1;local v46=(v20(v44,1 + 0 ,811 -(368 + (1478 -(87 + 968))) ) * ((6 -4)^(50 -((44 -34) + 8)))) + v43 ;local v47=v20(v44,2 + 0 + 19 ,(268 -149) -88 );local v48=((v20(v44,474 -(416 + 26) )==((1416 -(447 + 966)) -2)) and  -(1 + (0 -0))) or (1424 -((2447 -(1703 + 114)) + (1494 -(376 + 325)))) ;if (v47==(0 -0)) then if (v46==(0 -0)) then return v48 * (438 -(145 + 293)) ;else local v119=430 -(44 + 386) ;while true do if (v119==(1486 -(998 + 488))) then v47=1 + (0 -0) ;v45=766 -(745 + 21) ;break;end end end elseif (v47==((5160 -3483) + 370)) then return ((v46==((221 + 551) -(201 + 571))) and (v48 * (((2508 -1369) -(116 + 1022))/(0 -0)))) or (v48 * NaN) ;end return v8(v48,v47-(4258 -3235) ) * (v45 + (v46/(2^(31 + 21)))) ;end local function v25(v49) local v50=0;local v51;local v52;while true do if (v50==(255 -(163 + 91))) then v51=v3(v16,v18,(v18 + v49) -(15 -((1939 -(1869 + 61)) + 5)) );v18=v18 + v49 ;v50=378 -(85 + 291) ;end if (v50==(1268 -(243 + 286 + 736))) then return v6(v52);end if (v50==2) then v52={};for v120=1, #v51 do v52[v120]=v2(v1(v3(v51,v120,v120)));end v50=11 -8 ;end if (v50==(0 + 0)) then v51=nil;if  not v49 then v49=v23();if (v49==(1180 -(1123 + 57))) then return "";end end v50=1 + 0 ;end end end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v53=(function() return function(v92,v93,v94,v95,v96,v97,v98,v99) local v92=(function() return 0 -0 ;end)();local v93=(function() return;end)();local v94=(function() return;end)();while true do if ( #"]"==v92) then if (v93== #"|") then v94=(function() return v95()~=(0 -0) ;end)();elseif (v93==2) then v94=(function() return v96();end)();elseif (v93~= #"xxx") then else v94=(function() return v97();end)();end v98[v99]=(function() return v94;end)();break;end if (v92~=0) then else local v127=(function() return 0;end)();while true do if (v127==1) then v92=(function() return  #"\\";end)();break;end if (v127==(603 -(268 + 335))) then v93=(function() return v95();end)();v94=(function() return nil;end)();v127=(function() return 1;end)();end end end end return v92,v93,v94,v95,v96,v97,v98,v99;end;end)();local v54=(function() return function(v100,v101,v102,v103,v104,v105,v106,v107,v108) local v109=(function() return 0;end)();local v100=(function() return;end)();local v101=(function() return;end)();while true do local v118=(function() return 0;end)();while true do if (v118~=(290 -(60 + 230))) then else if (v109~=1) then else local v129=(function() return 0;end)();while true do if (v129~=(572 -(426 + 146))) then else local v132=(function() return 0 + 0 ;end)();while true do if (v132==0) then while true do if (v100==(1456 -(282 + 1174))) then v101=(function() return v102();end)();if (v103(v101, #"}", #"]")==0) then local v252=(function() return 0;end)();local v253=(function() return;end)();local v254=(function() return;end)();local v255=(function() return;end)();local v256=(function() return;end)();while true do if (v252==(811 -(569 + 242))) then local v259=(function() return 0;end)();while true do if (v259==1) then v252=(function() return 2 -1 ;end)();break;end if (v259==(0 + 0)) then v253=(function() return 1024 -(706 + 318) ;end)();v254=(function() return nil;end)();v259=(function() return 1;end)();end end end if (v252==(1253 -(721 + 530))) then while true do if (v253~=2) then else local v260=(function() return 1271 -(945 + 326) ;end)();local v261=(function() return;end)();while true do if (v260==0) then v261=(function() return 0 -0 ;end)();while true do if (1==v261) then v253=(function() return  #"xnx";end)();break;end if (v261==0) then if (v103(v255, #"[", #"/")== #" ") then v256[2]=(function() return v104[v256[2]];end)();end if (v103(v255,2 + 0 ,2)== #"{") then v256[ #"-19"]=(function() return v104[v256[ #"gha"]];end)();end v261=(function() return 1;end)();end end break;end end end if (v253== #"/") then local v262=(function() return 700 -(271 + 429) ;end)();local v263=(function() return;end)();while true do if (v262~=0) then else v263=(function() return 0 + 0 ;end)();while true do if (v263==0) then v256=(function() return {v105(),v105(),nil,nil};end)();if (v254==(1500 -(1408 + 92))) then local v269=(function() return 1086 -(461 + 625) ;end)();local v270=(function() return;end)();while true do if ((1288 -(993 + 295))~=v269) then else v270=(function() return 0 + 0 ;end)();while true do if (v270~=0) then else v256[ #"91("]=(function() return v105();end)();v256[ #"0313"]=(function() return v105();end)();break;end end break;end end elseif (v254== #":") then v256[ #"xxx"]=(function() return v106();end)();elseif (v254==(1173 -(418 + 753))) then v256[ #"gha"]=(function() return v106() -((1 + 1)^(2 + 14)) ;end)();elseif (v254== #"gha") then local v275=(function() return 0 + 0 ;end)();local v276=(function() return;end)();while true do if ((0 + 0)~=v275) then else v276=(function() return 0;end)();while true do if (v276~=(529 -(406 + 123))) then else v256[ #"-19"]=(function() return v106() -(2^16) ;end)();v256[ #"0836"]=(function() return v105();end)();break;end end break;end end end v263=(function() return 1;end)();end if (v263~=1) then else v253=(function() return 1771 -(1749 + 20) ;end)();break;end end break;end end end if (v253~=(0 + 0)) then else local v264=(function() return 0;end)();while true do if (v264~=(1322 -(1249 + 73))) then else v254=(function() return v103(v101,1 + 1 , #"gha");end)();v255=(function() return v103(v101, #".dev",1151 -(466 + 679) );end)();v264=(function() return 2 -1 ;end)();end if (v264~=1) then else v253=(function() return  #"/";end)();break;end end end if (v253~= #"asd") then else if (v103(v255, #"xnx", #"nil")~= #"!") then else v256[ #"xnxx"]=(function() return v104[v256[ #".dev"]];end)();end v107[v108]=(function() return v256;end)();break;end end break;end if (v252==(2 -1)) then v255=(function() return nil;end)();v256=(function() return nil;end)();v252=(function() return 1902 -(106 + 1794) ;end)();end end end break;end end return v100,v101,v102,v103,v104,v105,v106,v107,v108;end end end end end if (v109==0) then local v130=(function() return 0;end)();while true do if (v130~=1) then else v109=(function() return 1;end)();break;end if ((0 + 0)==v130) then v100=(function() return 0;end)();v101=(function() return nil;end)();v130=(function() return 1 + 0 ;end)();end end end break;end end end end;end)();local v55=(function() return function(v110,v111,v112) local v113=(function() return 0;end)();local v114=(function() return;end)();while true do if (v113~=0) then else v114=(function() return 0;end)();while true do if (v114==(0 -0)) then local v131=(function() return 0 -0 ;end)();while true do if (v131~=(114 -(4 + 110))) then else v110[v111-#"{" ]=(function() return v112();end)();return v110,v111,v112;end end end end break;end end end;end)();local v56=(function() return {};end)();local v57=(function() return {};end)();local v58=(function() return {};end)();local v59=(function() return {v56,v57,nil,v58};end)();local v60=(function() return v23();end)();local v61=(function() return {};end)();for v69= #"~",v60 do FlatIdent_7F35E,Type,Cons,v21,v24,v25,v61,v69=(function() return v53(FlatIdent_7F35E,Type,Cons,v21,v24,v25,v61,v69);end)();end v59[ #"-19"]=(function() return v21();end)();for v70= #"{",v23() do FlatIdent_455BF,Descriptor,v21,v20,v61,v22,v23,v56,v70=(function() return v54(FlatIdent_455BF,Descriptor,v21,v20,v61,v22,v23,v56,v70);end)();end for v71= #".",v23() do v57,v71,v28=(function() return v55(v57,v71,v28);end)();end return v59;end local function v29(v63,v64,v65) local v66=v63[585 -(57 + 527) ];local v67=v63[1429 -(41 + 1386) ];local v68=v63[106 -(17 + 86) ];return function(...) local v72=v66;local v73=v67;local v74=v68;local v75=v27;local v76=1 + 0 ;local v77= -(1 -0);local v78={};local v79={...};local v80=v12("#",...) -((1957 -(573 + 1217)) -(122 + 44)) ;local v81={};local v82={};for v115=0 -(0 -0) ,v80 do if (v115>=v74) then v78[v115-v74 ]=v79[v115 + (3 -2) ];else v82[v115]=v79[v115 + 1 + 0 ];end end local v83=(v80-v74) + 1 + 0 ;local v84;local v85;while true do v84=v72[v76];v85=v84[1];if (v85<=(46 -23)) then if (v85<=11) then if ((3334>1426) and (v85<=(70 -(30 + 3 + 32)))) then if (v85<=(2 + 0)) then if (v85<=0) then local v134=1257 -(1043 + 214) ;local v135;local v136;local v137;while true do if ((4773>3927) and (v134==(3 -2))) then v137=v84[1215 -(323 + 889) ];for v226=2 -(1 -0) ,v137 do v136[v226]=v82[v135 + v226 ];end break;end if (v134==(580 -(361 + 219))) then v135=v84[941 -(714 + 225) ];v136=v82[v135];v134=321 -(53 + (780 -513)) ;end end elseif ((1616>=788) and (v85==1)) then if (v82[v84[(1 -0) + 1 ]]==v84[417 -(15 + 44 + 354) ]) then v76=v76 + (983 -(18 + 964)) ;else v76=v84[11 -8 ];end else local v154=v84[2 + 0 ];v82[v154]=v82[v154](v82[v154 + 1 + 0 ]);end elseif (v85<=3) then local v138=850 -(20 + 830) ;local v139;while true do if (v138==0) then v139=v84[2];v82[v139](v13(v82,v139 + 1 + 0 ,v84[(186 -57) -((922 -(118 + 688)) + 10) ]));break;end end elseif ((1854<=3379) and (v85>(1 + 3))) then local v156=738 -(542 + 196) ;local v157;while true do if (v156==(0 -0)) then v157=v84[1 + 1 ];v82[v157]=v82[v157]();break;end end else v82[v84[2]]=v82[v84[2 + 1 ]];end elseif (v85<=(3 + 5)) then if (v85<=(15 -9)) then v82[v84[4 -2 ]]=v65[v84[1554 -(1126 + 425) ]];elseif ((4549==4549) and (v85>(55 -(25 + 23)))) then for v219=v84[407 -(118 + 287) ],v84[3] do v82[v219]=nil;end else local v160=v84[2];v82[v160](v82[v160 + 1 ]);end elseif (v85<=(35 -26)) then local v142=v84[1123 -(118 + 1003) ];v82[v142]=v82[v142](v13(v82,v142 + (2 -1) ,v77));elseif (v85==((75 + 312) -(142 + (2121 -(927 + 959))))) then local v161=v84[2];v82[v161]=v82[v161](v13(v82,v161 + (4 -3) ,v84[1 + 2 ]));else local v163=977 -((1864 -1311) + 424) ;local v164;local v165;while true do if ((v163==1) or (3022>=3024)) then v82[v164 + ((733 -(16 + 716)) -0) ]=v165;v82[v164]=v165[v84[4 + 0 ]];break;end if ((4820>2198) and (v163==(0 + 0))) then v164=v84[2 + 0 ];v165=v82[v84[2 + 1 ]];v163=(1 -0) + 0 ;end end end elseif (v85<=(36 -19)) then if (v85<=(38 -24)) then if (v85<=(26 -14)) then local v144=v84[1 + (98 -(11 + 86)) ];v82[v144]=v82[v144]();elseif ((v85>(62 -49)) or (1061>=4891)) then v82[v84[755 -(239 + 514) ]]=v84[2 + (2 -1) ];else local v168=1329 -(797 + (817 -(175 + 110))) ;local v169;local v170;local v171;local v172;while true do if (v168==(1 + 0)) then v77=(v171 + v169) -(1 + 0) ;v172=0 -(0 -0) ;v168=1204 -(373 + (4088 -3259)) ;end if (v168==(733 -(476 + 255))) then for v246=v169,v77 do v172=v172 + (1131 -(369 + 761)) ;v82[v246]=v170[v172];end break;end if (v168==0) then v169=v84[2];v170,v171=v75(v82[v169](v13(v82,v169 + 1 + 0 ,v84[3])));v168=1 -0 ;end end end elseif (v85<=(28 -13)) then v82[v84[240 -(64 + 174) ]]=v82[v84[3]];elseif (v85>(3 + (1809 -(503 + 1293)))) then v76=v84[3 -0 ];elseif ((1364<=4473) and v82[v84[338 -(144 + 192) ]]) then v76=v76 + 1 ;else v76=v84[3];end elseif (v85<=(236 -(42 + 174))) then if (v85<=(14 + 4)) then do return;end elseif (v85>((44 -28) + 3)) then do return;end else v82[v84[1 + 1 ]]=v82[v84[(1090 + 417) -(363 + 1141) ]][v84[1584 -(1183 + 397) ]];end elseif ((v85<=(63 -42)) or (3595<=3)) then if (v84[2 + (1061 -(810 + 251)) ]==v82[v84[3 + 1 ]]) then v76=v76 + (1976 -(1913 + 62)) ;else v76=v84[2 + 1 ];end elseif ((v85==22) or (4672==3852)) then if (v84[2 + 0 ]==v82[v84[10 -6 ]]) then v76=v76 + (1934 -(565 + 1368)) ;else v76=v84[3];end else local v177=v84[(3 + 4) -5 ];v82[v177](v13(v82,v177 + (1662 -(1477 + 184)) ,v84[3 -0 ]));end elseif (v85<=(33 + 2 + 0)) then if ((1559==1559) and (v85<=(885 -(564 + 292)))) then if (v85<=26) then if ((v85<=(41 -(550 -(43 + 490)))) or (1752<=788)) then v82[v84[5 -3 ]]();elseif ((v85==((1062 -(711 + 22)) -(244 + 60))) or (3907==177)) then for v221=v84[2 + 0 ],v84[479 -(41 + 435) ] do v82[v221]=nil;end else v82[v84[2]][v84[1004 -(938 + 63) ]]=v84[4 + 0 ];end elseif (v85<=(1152 -(936 + 189))) then v82[v84[1 + 1 ]]={};elseif (v85>(1641 -(1565 + 48))) then local v180=0 + 0 ;local v181;while true do if (v180==(1138 -(782 + 356))) then v181=v84[269 -(176 + 91) ];v82[v181]=v82[v181](v13(v82,v181 + ((7 -5) -1) ,v77));break;end end else v82[v84[2 -(859 -(240 + 619)) ]][v84[3]]=v82[v84[(265 + 831) -(975 + (185 -68)) ]];end elseif (v85<=(1907 -(157 + 1718))) then if ((3470>555) and (v85<=(25 + 5))) then v82[v84[6 -4 ]]=v29(v73[v84[(1 + 9) -7 ]],nil,v65);elseif ((v85>((2793 -(1344 + 400)) -(697 + 321))) or (972==645)) then local v184=0 -0 ;local v185;local v186;local v187;local v188;while true do if ((3 -1)==v184) then for v249=v185,v77 do local v250=0 -0 ;while true do if ((3182>=2115) and (v250==(0 + 0))) then v188=v188 + (1 -(405 -(255 + 150))) ;v82[v249]=v186[v188];break;end end end break;end if ((3893<4429) and ((0 -0)==v184)) then v185=v84[2];v186,v187=v75(v82[v185](v13(v82,v185 + ((968 + 260) -(322 + 905)) ,v84[614 -(602 + 9) ])));v184=1190 -(449 + 740) ;end if (((873 -(826 + 46))==v184) or (2867<1905)) then v77=(v187 + v185) -(948 -(245 + 702)) ;v188=(0 + 0) -0 ;v184=1 + 1 ;end end else v82[v84[1900 -(260 + 1638) ]]=v82[v84[3]][v84[444 -(382 + 58) ]];end elseif ((v85<=(105 -72)) or (1796>=4051)) then v82[v84[2]]=v29(v73[v84[3]],nil,v65);elseif (v85==34) then local v191=v84[2];v82[v191](v82[v191 + 1 + 0 ]);else v82[v84[3 -1 ]]();end elseif (v85<=(121 -80)) then if (v85<=(1243 -(902 + 303))) then if (v85<=(78 -42)) then local v151=v84[4 -2 ];v82[v151]=v82[v151](v13(v82,v151 + 1 + (0 -0) ,v84[1693 -(1121 + 569) ]));elseif ((1619<=3756) and (v85==(251 -(22 + (619 -427))))) then v82[v84[685 -(483 + 200) ]]={};else v82[v84[2]]=v65[v84[1466 -(1404 + 59) ]];end elseif ((604==604) and (v85<=39)) then if v82[v84[5 -3 ]] then v76=v76 + 1 ;else v76=v84[3 -0 ];end elseif ((v85==(805 -(468 + 297))) or (4484==900)) then local v196=v84[564 -(334 + 228) ];local v197=v82[v196];local v198=v84[(1749 -(404 + 1335)) -7 ];for v223=1,v198 do v197[v223]=v82[v196 + v223 ];end else local v199=0;local v200;local v201;while true do if ((v199==(0 -0)) or (4459<=1113)) then v200=v84[2 -0 ];v201=v82[v200];v199=1 + 0 ;end if (v199==(237 -(141 + (501 -(183 + 223))))) then for v251=v200 + 1 ,v84[3 + 0 ] do v7(v201,v82[v251]);end break;end end end elseif (v85<=44) then if ((3632>3398) and (v85<=(107 -65))) then v76=v84[6 -3 ];elseif ((4082<=4917) and (v85==(11 + 32))) then v82[v84[5 -3 ]]=v84[3 + 0 ];else v82[v84[2]][v84[2 + 1 ]]=v82[v84[4 -0 ]];end elseif (v85<=46) then if ((4832>=1386) and (v85==(63 -18))) then local v206=v84[2 + 0 ];local v207=v82[v84[3]];v82[v206 + (164 -(92 + 71)) ]=v207;v82[v206]=v207[v84[2 + 2 ]];else local v211=v84[2 -(0 + 0) ];v82[v211]=v82[v211](v82[v211 + 1 ]);end elseif ((137==137) and (v85==((293 + 519) -(574 + 191)))) then v82[v84[2]][v84[3 + (337 -(10 + 327)) ]]=v84[9 -5 ];elseif (v82[v84[2 + 0 ]]==v84[853 -(254 + 595) ]) then v76=v76 + 1 ;else v76=v84[129 -(55 + 71) ];end v76=v76 + (1 -0) ;end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
